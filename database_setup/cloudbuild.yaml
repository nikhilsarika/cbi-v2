steps:  
# Steps to build a docker image for postres microservice, push it to container registry and deploy it to cloud run.  
- name: "gcr.io/cloud-builders/docker"
  args: ['pull', 'postgres']
- name: "gcr.io/cloud-builders/docker"
  args: ['tag', 'postgres','gcr.io/chicago-business-intelligence/postgres']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/chicago-business-intelligence/postgres']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','postgres', '--image','gcr.io/chicago-business-intelligence/postgres', '--region','us-central1','--platform','managed', '--port','5435', '--allow-unauthenticated','--set-env-vars','POSTGRES_USER=postgres','--set-env-vars','POSTGRES_PASSWORD=root','--set-env-vars','POSTGRES_DB=chicago_business_intelligence','--set-env-vars','PGDATA=/var/lib/postgresql/data','--set-env-vars','PGPORT=5435']

# Steps to pull a docker image for pgadmin, push it to container registry and deploy it to cloud run.  
- name: "gcr.io/cloud-builders/docker"
  args: ['pull', 'dpage/pgadmin4']
- name: "gcr.io/cloud-builders/docker"
  args: ['tag', 'dpage/pgadmin4','gcr.io/chicago-business-intelligence/pgadmin']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/chicago-business-intelligence/pgadmin']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','pg-admin', '--image','gcr.io/chicago-business-intelligence/pgadmin', '--region','us-central1', '--add-cloudsql-instances', 'chicago-business-intelligence:us-central1:mypostgres','--platform','managed', '--port','80', '--allow-unauthenticated','--set-env-vars','PGADMIN_DEFAULT_EMAIL=user@gmail.com','--set-env-vars','PGADMIN_DEFAULT_PASSWORD=SuperSecret']
images:
- gcr.io/chicago-business-intelligence/postgres
- gcr.io/chicago-business-intelligence/pgadmin

